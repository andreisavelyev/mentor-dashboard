{"version":3,"sources":["components/Home.jsx","components/AuthorizedUser.jsx","components/Navbar.jsx","containers/Search.jsx","actions/getInputAction.js","actions/getDataAction.js","containers/Mentor.jsx","actions/resetInputAction.js","containers/MenteesTable.jsx","components/Router.jsx","containers/App.jsx","actions/authAction.js","serviceWorker.js","reducers/authReducer.js","reducers/getDataReducer.js","reducers/getInputReducer.js","reducers/rootReducer.js","store.js","index.js"],"names":["Home","react_default","a","createElement","className","firebase","auth","currentUser","displayName","Component","AuthorizedUser","props","src","photoURL","alt","onClick","signOut","withRouter","NavLink","to","exact","AuthorizedUser_AuthorizedUser","Search","e","input","target","value","toLowerCase","listOfMentors","this","mentors","filter","item","includes","getInput","type","placeholder","onChange","handleChange","bind","connect","_ref","getDataReducer","dispatch","payload","getInputAction","fetchDataStarted","fetchDataSuccess","data","getMentorsFromJSON","getTasksFromJSON","Mentor","getData","getInputReducer","mentorsFiltered","length","resetInput","_this$props$getDataRe","isLoaded","react","containers_Search","map","Link","key","concat","fetch","then","json","mentorDuplicates","mentor","Array","from","Set","taskDuplicates","Object","keys","flat","tasks","MenteesTable","_this","match","params","students","rows","toConsumableArray","Math","random","id","score","status","setTimeout","history","push","Router","BrowserRouter","components_Navbar","Route","path","component","initializeApp","apiKey","authDomain","App","uiConfig","signInFlow","signInOptions","GithubAuthProvider","PROVIDER_ID","callbacks","signInSuccess","_this2","onAuthStateChanged","user","getAuth","isLoggedIn","components_Router","StyledFirebaseAuth_default","firebaseAuth","authReducer","authAction","Boolean","window","location","hostname","initialState","inititalState","combineReducers","state","arguments","undefined","action","objectSpread","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","app","es","src_containers_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.427c5dee.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport firebase from 'firebase';\r\nimport './home.css';\r\n\r\nclass Home extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className='home'>\r\n        <h3>Hello, {firebase.auth().currentUser.displayName}</h3>\r\n        <p>This is my final Rolling Scopes School project aimed at \r\n          identifying whether a task was checked by a mentor or not. \r\n          It takes data from three Google Sheets, merges it into a JSON file,\r\n          creates a table with students and tasks and marks the cells accordingly.</p>\r\n        <p>Technologies used: React, Redux, Firebase auth, Express, SheetJS js-xlsx</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport firebase from 'firebase';\r\nimport './authorized-user.css';\r\n\r\n\r\nexport const AuthorizedUser = (props) => {\r\n  return (\r\n    <div className=\"authorized-user\">\r\n        <img src={firebase.auth().currentUser.photoURL} alt=\"User github avatar\" />\r\n      <button className=\"auth-btn\" onClick={() => firebase.auth().signOut()}>Sign out</button>\r\n    </div>\r\n  );\r\n} ","import React from 'react';\r\nimport './navbar.css';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { AuthorizedUser } from './AuthorizedUser';\r\n\r\nconst Navbar = (props) => {\r\n  return (\r\n    <div className=\"navigation\">\r\n      <div className=\"buttons-container\">\r\n        <NavLink className=\"navigation-link\" to=\"/\" exact>Home</NavLink>\r\n        <NavLink className=\"navigation-link\" to=\"/mentors\">Mentors</NavLink>\r\n      </div>\r\n      <AuthorizedUser />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(Navbar);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getInputAction } from '../actions/getInputAction';\r\n\r\nclass Search extends Component {\r\n  handleChange(e) {\r\n    const input = e.target.value.toLowerCase();\r\n    const listOfMentors = this.props.mentors.filter(item => item.toLowerCase().includes(input));\r\n    this.props.getInput(listOfMentors);\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <form>\r\n        <input className=\"search-input\" type=\"text\" placeholder=\"search\" onChange={this.handleChange.bind(this)}/>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({getDataReducer: {mentors}}) => ({\r\n  mentors,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getInput: input => dispatch(getInputAction(input))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","export const getInputAction = (input) => ({\r\n  type: 'GET_INPUT',\r\n  payload: input,\r\n});\r\n\r\n\r\n","export const getDataAction = () => {\r\n  return dispatch => {\r\n    dispatch(fetchDataStarted())\r\n  \r\n    fetch('data.json')\r\n      .then(data => data.json())\r\n      .then(data => {\r\n          dispatch(fetchDataSuccess(data))\r\n        return data\r\n      })\r\n      .then(data => {\r\n        const mentorDuplicates = data.map(item => item.mentor);\r\n        const mentors = Array.from(new Set(mentorDuplicates))\r\n        dispatch(getMentorsFromJSON(mentors))\r\n\r\n        const taskDuplicates = data.map(item => Object.keys(item)).flat().filter(item => item !== 'mentor' && item !== 'student');\r\n        const tasks = Array.from(new Set(taskDuplicates))\r\n        dispatch(getTasksFromJSON(tasks))\r\n      })\r\n  }\r\n}\r\n\r\n\r\nconst fetchDataStarted = () => ({type:'FETCH_DATA_STARTED'});\r\n\r\nconst fetchDataSuccess = (data) => ({\r\n  type: 'FETCH_DATA_SUCCESS',\r\n  payload: data,\r\n});\r\n\r\nconst getMentorsFromJSON = (data) => ({\r\n  type: 'GET_MENTORS_FROM_JSON',\r\n  payload: data\r\n}) \r\n\r\nconst getTasksFromJSON = (data) => ({\r\n  type: 'GET_TASKS_FROM_JSON',\r\n  payload: data\r\n}) \r\n","import React, { Component, Fragment } from 'react';\r\nimport Search from './Search';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { getDataAction } from '../actions/getDataAction';\r\nimport { resetInputAction } from '../actions/resetInputAction';\r\nimport './mentor.css';\r\n\r\nclass Mentor extends Component {\r\n  componentDidMount() {\r\n    this.props.getData();\r\n\r\n    if(this.props.getInputReducer.mentorsFiltered.length) {\r\n      this.props.resetInput();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {isLoaded, mentors} = this.props.getDataReducer;\r\n    const { mentorsFiltered } = this.props.getInputReducer;\r\n    const listOfMentors = mentorsFiltered.length ? mentorsFiltered : mentors;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Search />\r\n        {isLoaded && listOfMentors.map((item) => <Link className=\"mentor-link\" key={`${item}`} to={'/mentors/' + item}>{item}</Link>)}\r\n\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({getDataReducer, getInputReducer}) => ({\r\n  getDataReducer,\r\n  getInputReducer\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getData: value => dispatch(getDataAction(value)),\r\n  resetInput: () => dispatch(resetInputAction()),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mentor);","export const resetInputAction = () => ({\r\n  type: 'RESET_INPUT',\r\n});","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './mentees-table.css';\r\n\r\n\r\nclass MenteesTable extends Component {\r\n\r\n  render() {\r\n    const { mentor } = this.props.match.params;\r\n    const { isLoaded, data, tasks } = this.props.getDataReducer;\r\n    const students = data.filter(item => item.mentor === mentor);\r\n    const rows = ['student', ...tasks]\r\n    if (!isLoaded) {\r\n      setTimeout(() => this.props.history.push('/mentors'), 1000)\r\n    } else {\r\n      return (\r\n        <Fragment>\r\n          <h2>{mentor}</h2>\r\n          <table>\r\n            <tbody>\r\n              {rows.map(item => {\r\n                return (\r\n                <tr key={Math.random()}><td>{item === 'student' ? 'Tasks / Students' : item}</td>\r\n                  {students.map(id => {\r\n                     if (typeof id[item] === 'string') {\r\n                      return <td key={Math.random()}>{id[item]}</td>\r\n                    } \r\n                    if (typeof id[item] === 'number') {\r\n                      return <td key={Math.random()} className='checked'></td>\r\n                    } else if (typeof id[item] === 'object' && typeof id[item].score === 'number') {\r\n                      return <td key={Math.random()} className='checked'></td>\r\n                    } else if ((typeof id[item] === 'object' && id[item].status === 'Checked') || !id[item]) {\r\n                      return <td key={Math.random()} className='unchecked'></td>\r\n                    } else if (typeof id[item] === 'object' && id[item].status === 'Checking') {\r\n                      return <td key={Math.random()} className='checking'></td>\r\n                    } else if (typeof id[item] === 'object' && id[item].status === 'ToDo') {\r\n                      return <td key={Math.random()} className='todo'></td>\r\n                    } else if (typeof id[item] === 'object' && id[item].status === 'In Progress') {\r\n                      return <td key={Math.random()} className='in-progress'></td>\r\n                    }\r\n                    return <td key={Math.random()} className='unchecked'></td>\r\n                  })}\r\n                </tr>)\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </Fragment>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <h2>Getting back to Mentors</h2>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({getDataReducer}) => ({\r\n  getDataReducer,\r\n});\r\n\r\nexport default connect(mapStateToProps)(MenteesTable);","import React, { Component } from 'react';\r\nimport Home from './Home';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport Navbar from './Navbar';\r\nimport Mentor from '../containers/Mentor';\r\nimport MenteesTable from '../containers/MenteesTable';\r\n\r\nclass Router extends Component {\r\n  \r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n      <div>\r\n        <Navbar />\r\n        <Route path='/' exact component={Home} />\r\n        <Route path='/mentors' exact component={Mentor} />\r\n        <Route path='/mentors/:mentor' exact component={MenteesTable} />\r\n      </div>\r\n    </BrowserRouter>\r\n      // <Home />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Router;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Router from '../components/Router';\nimport { connect } from 'react-redux';\nimport firebase from 'firebase';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport { authAction } from '../actions/authAction';\n\n\nfirebase.initializeApp({\n  apiKey: 'AIzaSyD3OB1XeATT4gU_j2Iaq4FS4rxaUqp1xPI',\n  authDomain: 'mentor-dashboard-78d75.firebaseapp.com'\n})\n\nclass App extends Component {\n  uiConfig = {\n    signInFlow: \"popup\",\n    signInOptions: [\n      firebase.auth.GithubAuthProvider.PROVIDER_ID,\n    ],\n      \n    callbacks: {\n      signInSuccess: () => false,\n    }\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      this.props.getAuth(!!user)\n    })\n  }\n  \n  render() {\n    return (\n      <div>\n          {this.props.auth.isLoggedIn ? (\n            <Router/>\n        ) : (\n          <StyledFirebaseAuth uiConfig={this.uiConfig} firebaseAuth={firebase.auth()} /> \n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({authReducer}) => ({\n  auth: authReducer,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getAuth: value => dispatch(authAction(value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","export const authAction = (value) => ({\r\n  type: 'GET_AUTHORIZATION',\r\n  payload: value,\r\n});","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n  isLoggedIn: false,\r\n}\r\n\r\nexport const authReducer = function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'GET_AUTHORIZATION':\r\n      return {\r\n        ...state,\r\n        isLoggedIn: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n} ","const inititalState = {\r\n  isLoaded: false,\r\n  data: [],\r\n  mentors: [],\r\n  tasks: []\r\n}\r\n\r\nexport const getDataReducer = (state = inititalState, action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_DATA_STARTED':\r\n      return {\r\n        ...state,\r\n        };\r\n    case 'FETCH_DATA_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoaded: true,\r\n        data: action.payload\r\n      } \r\n     case 'GET_MENTORS_FROM_JSON':\r\n     return {\r\n       ...state,\r\n      mentors: action.payload\r\n     } \r\n     case 'GET_TASKS_FROM_JSON':\r\n     return {\r\n       ...state,\r\n      tasks: action.payload\r\n     }  \r\n    default:\r\n      return state;\r\n  }\r\n};","const initialState = {\r\n  mentorsFiltered: [],\r\n}\r\n\r\nexport const getInputReducer = function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'GET_INPUT':\r\n      return {\r\n        ...state,\r\n        mentorsFiltered: action.payload\r\n      }\r\n    case 'RESET_INPUT':\r\n      return initialState;\r\n    default:\r\n      return state\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport { authReducer } from './authReducer';\r\nimport { getDataReducer } from './getDataReducer';\r\nimport { getInputReducer } from './getInputReducer';\r\n\r\nexport default combineReducers({authReducer, getDataReducer, getInputReducer});","import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/rootReducer';\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App.jsx';\nimport * as serviceWorker from './serviceWorker';\nimport { store } from './store'\nimport { Provider } from 'react-redux';\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}